#ikev2 first
#https://github.com/libreswan

#GCP上的Debian内核带有Cloud字样,没有/dev/ppp，不支持L2TP
#修改标准内核
apt install linux-image-amd64
cat /boot/grub/grub.cfg
vim /etc/default/grub
GRUB_DEFAULT=0 修改为
GRUB_DEFAULT="Advanced options for Debian GNU/Linux>Debian GNU/Linux, with Linux 5.10.0-8-amd64"
update-grub
reboot
###########################################################################################
#抛弃过时的L2TP协议，手动配置IKEv2
ifconfig ens4 mtu 1500
apt install libreswan
apt install wget dnsutils
ipsec verify
ipsec initnss
ipsec start
ipsec status
##########################################################################################
vi /etc/ipsec.d/ikev2.conf

conn ikev2-cp
  left=%defaultroute
  leftcert=ipv4.wower.cool
  leftid=@ipv4.wower.cool
  leftsendcert=always
  leftsubnet=0.0.0.0/0
  leftrsasigkey=%cert
  right=%any
  rightid=%fromcert
  rightaddresspool=10.2.0.10-10.2.0.250
  rightca=%same
  rightrsasigkey=%cert
  modecfgdns=8.8.8.8,8.8.4.4
  narrowing=yes
  dpddelay=30
  dpdtimeout=120
  dpdaction=clear
  auto=add
  ikev2=yes
  rekey=no
  fragmentation=yes
  encapsulation=yes
  mobike=yes
  ikelifetime=24h
  salifetime=24h
  authby=rsa-sha1
##########################################################################################
#不需要配置
vi /etc/ipsec.conf
vi/etc/ipsec.secrets
%any  %any  : PSK "vpn"
##########################################################################################
vi /etc/sysctl.conf

# Added by hwdsl2 VPN script

net.ipv4.ip_forward = 1
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.ens4.rp_filter = 0

#GCP默认值，不需要更改
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv4.conf.all.send_redirects = 0
#net.ipv4.conf.default.accept_redirects = 0
#net.ipv4.conf.default.send_redirects = 0
#net.ipv4.conf.ens4.accept_redirects = 0
#net.ipv4.conf.ens4.send_redirects = 0

#net.ipv4.ip_no_pmtu_disc = 1

sysctl -p

#显示所有内核参数
sysctl -a
##########################################################################################
#方案一(推荐）
#iptables -I INPUT 1 -p udp -m udp --dport 1701 -m policy --dir in --pol none -j DROP
#iptables -I INPUT 2 -m conntrack --ctstate INVALID -j DROP
#iptables -I INPUT 3 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
#iptables -I INPUT 4 -p udp -m multiport --dports 500,4500 -j ACCEPT
#iptables -I INPUT 5 -p udp -m udp --dport 1701 -m policy --dir in --pol ipsec -j ACCEPT
#iptables -I INPUT 6 -p udp -m udp --dport 1701 -j DROP
#iptables -I FORWARD 1 -m conntrack --ctstate INVALID -j DROP
#iptables -I FORWARD 2 -i ens4 -o ppp+ -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
#iptables -I FORWARD 3 -i ppp+ -o ens4 -j ACCEPT
#iptables -I FORWARD 4 -i ppp+ -o ppp+ -j ACCEPT
#iptables -I FORWARD 5 -d 192.168.43.0/24 -i ens4 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
#iptables -I FORWARD 6 -s 192.168.43.0/24 -o ens4 -j ACCEPT
#iptables -I FORWARD 7 -s 192.168.43.0/24 -o ppp+ -j ACCEPT
#iptables -A FORWARD -j DROP
#iptables -t nat -I POSTROUTING -s 192.168.42.0/24 -o ens4 -j MASQUERADE
#iptables -t nat -I POSTROUTING -s 192.168.43.0/24 -o ens4 -m policy --dir out --pol none -j MASQUERADE
###仅设置此三项就可以
iptables -t nat -A POSTROUTING -o ens4 -m policy --dir out --pol none -j MASQUERADE
iptables -t mangle -A FORWARD -m policy --pol ipsec --dir in -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360
iptables -t mangle -A FORWARD -m policy --pol ipsec --dir out -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360
#解决Linux客户端strongswan, libreswan 可以连接但是没有流量的问题，上面两条

iptables-save >> /etc/iptables.rules
iptables -L
###########################################
#方案二
vi /etc/iptables.rules

# Generated by iptables-save v1.8.7 on Sun Sep  5 22:15:18 2021
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A FORWARD -p tcp -m policy --dir in --pol ipsec -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360
-A FORWARD -p tcp -m policy --dir out --pol ipsec -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360
COMMIT
# Completed on Sun Sep  5 22:15:18 2021
# Generated by iptables-save v1.8.7 on Sun Sep  5 22:15:18 2021
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -o ens4 -m policy --dir out --pol none -j MASQUERADE
COMMIT
# Completed on Sun Sep  5 22:15:18 2021

iptables-restore < /etc/iptables.rules
##########################################################################################
#Enabling services on boot

cat > /etc/network/if-pre-up.d/iptablesload <<'EOF'
#!/bin/sh
iptables-restore < /etc/iptables.rules
exit 0
EOF

chmod +x /etc/network/if-pre-up.d/iptablesload

cat > /etc/systemd/system/load-iptables-rules.service <<'EOF'
[Unit]
Description = Load /etc/iptables.rules
DefaultDependencies=no
Before=network-pre.target
Wants=network-pre.target
Wants=systemd-modules-load.service local-fs.target
After=systemd-modules-load.service local-fs.target
[Service]
Type=oneshot
ExecStart=/etc/network/if-pre-up.d/iptablesload
[Install]
WantedBy=multi-user.target
EOF

systemctl enable --now load-iptables-rules
systemctl enable --now ipsec
ipsec verify

#上传已存在证书
scp cert9.db root@ipv4.wower.cool:/var/lib/ipsec/nss/cert9.db
scp key4.db root@ipv4.wower.cool:/var/lib/ipsec/nss/key4.db

service ipsec restart
systemctl status ipsec
##########################################################################################
#IP
PUBLIC_IP=$(dig @resolver1.opendns.com -t A -4 myip.opendns.com +short)
[ -z "$PUBLIC_IP" ] && PUBLIC_IP=$(wget -t 3 -T 15 -qO- http://ipv4.icanhazip.com)
printf '%s\n' "$PUBLIC_IP"
#域名
PUBLIC_IP=ipv4.wower.cool

##可选步骤，如果第一步指定了服务器的域名，则必须将以下命令中的 leftid=$PUBLIC_IP 换成 leftid=@$PUBLIC_IP
cat > /etc/ipsec.d/ikev2.conf <<EOF
conn ikev2-cp
  left=%defaultroute
  leftcert=$PUBLIC_IP
  leftid=$PUBLIC_IP
  leftsendcert=always
  leftsubnet=0.0.0.0/0
  leftrsasigkey=%cert
  right=%any
  rightid=%fromcert
  rightaddresspool=10.2.0.10-10.2.0.250
  rightca=%same
  rightrsasigkey=%cert
  modecfgdns=8.8.8.8,8.8.4.4
  narrowing=yes
  dpddelay=30
  dpdtimeout=120
  dpdaction=clear
  auto=add
  ikev2=yes
  rekey=no
  fragmentation=yes
  encapsulation=yes
  mobike=yes
  ikelifetime=24h
  salifetime=24h
  authby=rsa-sha1
EOF

###默认不需要改动
#libreswan4.3 nss默认位置
#ipsec initnss -d /var/lib/ipsec/nss

##生成CA证书
certutil -z <(head -c 1024 /dev/urandom) \
  -S -x -n "IKEv2 VPN CA" \
  -s "O=IKEv2 VPN,CN=IKEv2 VPN CA" \
  -k rsa -g 3072 -v 120 \
  -d sql:/var/lib/ipsec/nss -t "CT,," -2
#提示步骤
Generating key.  This may take a few moments...

Is this a CA certificate [y/N]?
y
Enter the path length constraint, enter to skip [<0 for unlimited path]: >
Is this a critical extension [y/N]?
N

##生成VPN服务器证书
#IP
certutil -z <(head -c 1024 /dev/urandom) \
  -S -c "IKEv2 VPN CA" -n "$PUBLIC_IP" \
  -s "O=IKEv2 VPN,CN=$PUBLIC_IP" \
  -k rsa -g 3072 -v 120 \
  -d sql:/var/lib/ipsec/nss -t ",," \
  --keyUsage digitalSignature,keyEncipherment \
  --extKeyUsage serverAuth \
  --extSAN "ip:$PUBLIC_IP,dns:$PUBLIC_IP"
#域名
certutil -z <(head -c 1024 /dev/urandom) \
  -S -c "IKEv2 VPN CA" -n "$PUBLIC_IP" \
  -s "O=IKEv2 VPN,CN=$PUBLIC_IP" \
  -k rsa -g 3072 -v 120 \
  -d sql:/var/lib/ipsec/nss -t ",," \
  --keyUsage digitalSignature,keyEncipherment \
  --extKeyUsage serverAuth \
  --extSAN "dns:$PUBLIC_IP"
  
##生成客户端证书
certutil -z <(head -c 1024 /dev/urandom) \
  -S -c "IKEv2 VPN CA" -n "client" \
  -s "O=IKEv2 VPN,CN=client" \
  -k rsa -g 3072 -v 120 \
  -d sql:/var/lib/ipsec/nss -t ",," \
  --keyUsage digitalSignature,keyEncipherment \
  --extKeyUsage serverAuth,clientAuth -8 "client"
  
##导出.p12文件
pk12util -d sql:/var/lib/ipsec/nss -n "client" -o client.p12

##iOS客户端导出CA证书到 ikev2vpnca.cer：
certutil -L -d sql:/var/lib/ipsec/nss -n "IKEv2 VPN CA" -a -o ikev2vpnca.cer

certutil -L -d sql:/var/lib/ipsec/nss
certutil -L -d sql:/var/lib/ipsec/nss -n "client"

service ipsec restart
systemctl status ipsec

#此文件指定nss目录
pkcs11.txt
##########################################################################################
##Windows客户端
#方式一（推荐）
Add-VpnConnection -ServerAddress 'wower.cool' -Name 'IPsec' -TunnelType IKEv2 -AuthenticationMethod MachineCertificate -EncryptionLevel Required -PassThru
Set-VpnConnectionIPsecConfiguration -ConnectionName 'IPsec' -AuthenticationTransformConstants GCMAES128 -CipherTransformConstants GCMAES128 -EncryptionMethod AES256 -IntegrityCheckMethod SHA256 -PfsGroup None -DHGroup Group14 -PassThru -Force
#方式二
修改注册表 REG ADD HKLM\SYSTEM\CurrentControlSet\Services\RasMan\Parameters /v NegotiateDH2048_AES256 /t REG_DWORD /d 0x1 /f

vi /etc/ipsec.d/ikev2.conf
#ike=aes256-sha2,aes128-sha2,aes256-sha1,aes128-sha1
phase2alg=aes_gcm-null,aes128-sha1,aes256-sha1,aes128-sha2,aes256-sha2

windows虚拟机无法正常访问网页，DNSSEC问题 ，修改本地DNS为8.8.8.8

##Android客户端strongswan(Android自带ikev2客户端不需要此配置）
vi /etc/ipsec.d/ikev2.conf
在 conn ikev2-cp 小节的末尾添加 authby=rsa-sha1，开头必须空两格。保存文件并运行 service ipsec restart。

##Debian客户端strongswan
vi /etc/ipsec.d/ikev2.conf
在 conn ikev2-cp 小节的末尾添加 authby=rsa-sha1，开头必须空两格。保存文件并运行 service ipsec restart。

apt install network-manager-strongswan
openssl pkcs12 -in client.p12 -cacerts -nokeys -out ikev2vpnca.cer
openssl pkcs12 -in client.p12 -clcerts -nokeys -out vpnclient.cer
openssl pkcs12 -in client.p12 -nocerts -nodes  -out vpnclient.key
在Options部分，选中Request an inner IP address
#在Cipher proposals (Algorithms)部分，选中Enable custom proposals
#在ESP字段中输入 aes128gcm16

Linux虚拟机无法正常访问网页，修改本地DNS为8.8.8.8

##Debian客户端libreswan
apt install libreswan
ipsec verify

vi /etc/sysctl.conf

net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.eth0.rp_filter = 0

sysctl -p

vi /etc/ipsec.d/client.conf
conn vpn
  left=%defaultroute
  leftcert=client
  leftid=%fromcert
  leftrsasigkey=%cert
  leftsubnet=0.0.0.0/0 
  leftmodecfgclient=yes
  right=ipv4.wower.cool
  rightsubnet=0.0.0.0/0 
  rightid=@ipv4.wower.cool
  rightrsasigkey=%cert
  narrowing=yes
  ikev2=yes
  rekey=yes
  fragmentation=yes
  mobike=yes
  auto=add

systemctl enable --now ipsec

ipsec import client.p12
ipsec addconn vpn
ipsec auto --up vpn
ipsec auto --down vpn
ipsec restart

ipsec initnss

#如果配置域名而不是IP，无法连接
#addconn: ERROR: hostname.example.com failed DNSSEC validation!
#原因DNSSEC ，修改本地DNS为8.8.8.8

##openwrt初始化
vi /etc/config/network
passwd
reboot
opkg update
opkg remove <package>
##openwrt 客户端配置完成后路由器可以连接并且可以正常访问vpn，但lan内主机无法使用vpn(需配置firewall)
opkg install libreswan

#Debian系统的/usr/share/dns复制到openwrt
scp -r dns root@192.168.159.10:/usr/share

#修改/etc/ipsec.d/ikev2.conf
mobike=no
right=34.126.153.122

#修改配置文件
vi /etc/ipsec.conf
include /etc/ipsec.d/*.conf //取消#打开此选项
vi /etc/firewall.user
iptables -t nat -I POSTROUTING -m policy --pol ipsec --dir out -j ACCEPT

ipsec look vpn
ipsec auto --add <connection name>
ipsec auto --up <connection name>
ipsec auto --down <connection name>
ipsec auto --delete <connection name>
